/* // flex container  //  flex item  */

/*   width: max-content; */
/*   width: min-content; */


/* // in FLEX SHRINK the width(width: max-content) will stay same/constant after shrinking the viewport */


/* in FLEX GROW it will take the extra spaces of flex container 
if we give flex grow to every elements then it will devide the extra spaces of flex container equally.
*/


/*  JUSTIFY CONTENT:

 // to put the all the flex items in the center we have to use justify-content: center in the parenrt element and it distribute the extra spaces to the left and right side  */

/* // to put all the extra spaces equally between the flex items we have to use justify-content: SPACE-BETWEEN in the parenrt element and it distribute the extra spaces between the flex-items. 

// justify-content: space-around,== it will create spaces between the flex items and also distribute half of the space of space-between to the left and right.  if spaces between flex-items is 10px then it put 5px to the left and right.

// justify-content: space-evenly;  it will create spaces between the flex items and also distribute the same space of space-between to the left and right.  if spaces between flex-items is 10px then it put 10px to the left and right too.

*/


/* // ALIGN-ITEMS: 
1) STRETCH - default property- stretch the items to the whole parent height.
2) FLEX-START -  IT WILL take the original text height of every flex items from the top. not gonna take any extra height.
3) FLEX-END -  IT WILL take the original text height of every flex items from the bottom. not gonna take any extra height.
4) CENTER - IT WILL take the original text height of every flex items and stay in the center. not gonna take any extra height. */


/* // FLEX-DIRECTION :  
1) by default is row.
2) ROW-REVERSE - IT WILL reverse the row direction of flex-items. 
3)COLUMN - IT will put all the flex items by COLUMN direction.

*/


* {
    box-sizing: border-box;
}

body {
    margin: 0;
}

.parent {
    padding: 10px;
    border: 4px solid orangered;
    display: flex;

    height: 70vh;
    /* justify-content: center; */
    justify-content: space-between;

    /* justify-content: space-around; */
    /* justify-content: space-evenly; */

    align-items: center;

    /* flex-direction: row-reverse; */
    flex-direction: column;
}


/* // to target direct children not childrens of children */

.parent>span {
    border: 4px solid rgb(211, 25, 180);
    background-color: aqua;
    /* width: 400px; */
    /* height: 300px; */

    /* flex-grow: 2; */
}

.parent p {
    border: 4px solid blue;
    background-color: chartreuse;
    margin: 0;
    width: 300px;
    /* width: max-content; */
    /* flex-shrink: 0; */

}

.parent a {
    border: 4px solid green;
    background-color: blanchedalmond;
    /* width: 300px; */
    height: 100px;

    /* flex-shrink: 0; */
    /* flex-grow: 1; */

}

